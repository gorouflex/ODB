name: CL

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Get latest release version
      id: get_latest_release
      run: |
        version=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name')
        echo "::set-output name=latest_version::$version"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ACCEPT: "application/vnd.github.v3+json"

    - name: Increment the version
      id: increment_version
      run: |
        latest_version="${{ steps.get_latest_release.outputs.latest_version }}"
        IFS='-' read -ra version_parts <<< "$latest_version"
        version="${version_parts[0]}"
        alpha_version="Alpha${version_parts[1]}"
        IFS='.' read -ra version_numbers <<< "$version"
        major="${version_numbers[0]}"
        minor="${version_numbers[1]}"
        new_minor=$((minor + 1))
        new_version="$major.$new_minor"
        new_tag="$new_version-$alpha_version"
        echo "::set-output name=new_version::$new_version"
        echo "::set-output name=new_tag::$new_tag"
      shell: bash

    - name: Zip folder
      run: |
        zip -r ODB.zip ODB
      working-directory: ${{ github.workspace }}

    - name: Set up Git
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Commit and push ODB.zip
      run: |
        git add ODB.zip
        git commit -m "Add ODB.zip"
        git push
      working-directory: ${{ github.workspace }}

    - name: Create pre-release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: ODB.zip
        prerelease: true
        tag_name: ${{ steps.increment_version.outputs.new_tag }}
        release_name: ${{ steps.increment_version.outputs.new_version }} Beta
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get 5 recent commits
      id: get_commits
      run: |
        git log --oneline -n 5
      working-directory: ${{ github.workspace }}

    - name: Set release description
      run: |
        description=""
        while read -r line; do
          description="$description\n- $line"
        done <<< "${{ steps.get_commits.outputs.stdout }}"
        description="${description#\\n}"
        echo "Recent commits in this release:${description}" > description.txt
      working-directory: ${{ github.workspace }}

    - name: Upload release asset file
      id: upload_asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: description.txt
        asset_name: recent_commits.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
